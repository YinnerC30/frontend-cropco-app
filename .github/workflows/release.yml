name: Release and Build Docker Image

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Tipo de versión'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run linting
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # Para workflow manual, incrementar versión
            VERSION_TYPE="${{ github.event.inputs.version_type }}"
            npm run version:$VERSION_TYPE
            VERSION=$(node -p "require('./package.json').version")
          else
            # Para tags, usar la versión del tag
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION#v}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/cropco-frontend:${{ steps.version.outputs.version }}
            ${{ secrets.DOCKER_USERNAME }}/cropco-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create Release
        if: github.event_name == 'workflow_dispatch'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            ## Cambios en esta versión
            
            ### Nuevas características
            - 
            
            ### Mejoras
            - 
            
            ### Correcciones
            - 
            
            ### Docker Image
            - Tag: `${{ secrets.DOCKER_USERNAME }}/cropco-frontend:${{ steps.version.outputs.version }}`
            - Latest: `${{ secrets.DOCKER_USERNAME }}/cropco-frontend:latest`
          draft: false
          prerelease: false

      - name: Push changes
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git push origin main
          git push --tags 